[{"/Users/rajeshbagul/code/connect-account-creator/src/index.js":"1","/Users/rajeshbagul/code/connect-account-creator/src/App.js":"2","/Users/rajeshbagul/code/connect-account-creator/src/Pages/index.js":"3","/Users/rajeshbagul/code/connect-account-creator/src/Pages/LandingPage/LandingPage.jsx":"4","/Users/rajeshbagul/code/connect-account-creator/src/Components/index.js":"5","/Users/rajeshbagul/code/connect-account-creator/src/Components/NavBar/NavBar.jsx":"6","/Users/rajeshbagul/code/connect-account-creator/src/Components/Background/Background.jsx":"7","/Users/rajeshbagul/code/connect-account-creator/src/Components/Icons/icons.jsx":"8","/Users/rajeshbagul/code/connect-account-creator/src/Routes/Router.jsx":"9","/Users/rajeshbagul/code/connect-account-creator/src/Routes/RouteMapping.js":"10","/Users/rajeshbagul/code/connect-account-creator/src/Pages/ErrorPage/ErrorPage.jsx":"11","/Users/rajeshbagul/code/connect-account-creator/src/Pages/GenericPage/GenericPage.jsx":"12","/Users/rajeshbagul/code/connect-account-creator/src/Pages/SuccessPage/SuccessPage.jsx":"13","/Users/rajeshbagul/code/connect-account-creator/src/Pages/AbandonedPage/AbandonedPage.jsx":"14","/Users/rajeshbagul/code/connect-account-creator/src/Components/GenericMessage/GenericMessage.jsx":"15","/Users/rajeshbagul/code/connect-account-creator/src/Components/PrimaryButton/PrimaryButton.jsx":"16","/Users/rajeshbagul/code/connect-account-creator/src/Components/InvertedPrimaryButton/InvertedPrimaryButton.jsx":"17","/Users/rajeshbagul/code/connect-account-creator/src/Components/ButtonWithGlyphIcon/ButtonWithGlyphIcon.jsx":"18","/Users/rajeshbagul/code/connect-account-creator/src/Components/GenericMessage/InstagramGenericMessage.jsx":"19","/Users/rajeshbagul/code/connect-account-creator/src/utils/constants.js":"20","/Users/rajeshbagul/code/connect-account-creator/src/utils/helpers.js":"21","/Users/rajeshbagul/code/connect-account-creator/src/Components/FullScreenLoader/FullScreenLoader.jsx":"22","/Users/rajeshbagul/code/connect-account-creator/src/Pages/InstaEducationPage/InstaEducation.jsx":"23","/Users/rajeshbagul/code/ai-hackathon/src/index.js":"24","/Users/rajeshbagul/code/ai-hackathon/src/App.js":"25","/Users/rajeshbagul/code/ai-hackathon/src/Routes/Router.jsx":"26","/Users/rajeshbagul/code/ai-hackathon/src/Pages/index.js":"27","/Users/rajeshbagul/code/ai-hackathon/src/Routes/RouteMapping.js":"28","/Users/rajeshbagul/code/ai-hackathon/src/Pages/LandingPage/LandingPage.jsx":"29","/Users/rajeshbagul/code/ai-hackathon/src/utils/api.js":"30","/Users/rajeshbagul/code/ai-hackathon/src/utils/constants.js":"31","/Users/rajeshbagul/code/ai-hackathon/src/Components/index.js":"32","/Users/rajeshbagul/code/ai-hackathon/src/Components/PlatformIconBox/PlatformIconBox.jsx":"33","/Users/rajeshbagul/code/ai-hackathon/src/Components/Icons/icons.jsx":"34","/Users/rajeshbagul/code/ai-hackathon/src/analytics/index.js":"35","/Users/rajeshbagul/code/ai-hackathon/src/Components/Background/Background.jsx":"36","/Users/rajeshbagul/code/ai-hackathon/src/Components/NavBar/NavBar.jsx":"37","/Users/rajeshbagul/code/ai-hackathon/src/Components/ButtonWithGlyphIcon/ButtonWithGlyphIcon.jsx":"38","/Users/rajeshbagul/code/ai-hackathon/src/Components/FullScreenLoader/FullScreenLoader.jsx":"39","/Users/rajeshbagul/code/ai-hackathon/src/Components/InvertedPrimaryButton/InvertedPrimaryButton.jsx":"40","/Users/rajeshbagul/code/ai-hackathon/src/Components/PrimaryButton/PrimaryButton.jsx":"41","/Users/rajeshbagul/code/ai-hackathon/src/Components/InputField/InputField.jsx":"42","/Users/rajeshbagul/code/ai-hackathon/src/Components/TagsFilter/TagsFilter.jsx":"43","/Users/rajeshbagul/code/ai-hackathon/src/Pages/IntroPage/IntroPage.jsx":"44"},{"size":667,"mtime":1685535806417,"results":"45","hashOfConfig":"46"},{"size":305,"mtime":1677061333201,"results":"47","hashOfConfig":"46"},{"size":437,"mtime":1677061333208,"results":"48","hashOfConfig":"46"},{"size":8200,"mtime":1685541333354,"results":"49","hashOfConfig":"46"},{"size":576,"mtime":1677061333206,"results":"50","hashOfConfig":"46"},{"size":434,"mtime":1685540992056,"results":"51","hashOfConfig":"46"},{"size":393,"mtime":1685540582328,"results":"52","hashOfConfig":"46"},{"size":710,"mtime":1685541031752,"results":"53","hashOfConfig":"46"},{"size":1145,"mtime":1685535806416,"results":"54","hashOfConfig":"46"},{"size":342,"mtime":1685535806415,"results":"55","hashOfConfig":"46"},{"size":3250,"mtime":1685540560387,"results":"56","hashOfConfig":"46"},{"size":942,"mtime":1685540562513,"results":"57","hashOfConfig":"46"},{"size":2266,"mtime":1685540573493,"results":"58","hashOfConfig":"46"},{"size":2905,"mtime":1685540558219,"results":"59","hashOfConfig":"46"},{"size":1766,"mtime":1685535806403,"results":"60","hashOfConfig":"46"},{"size":525,"mtime":1675668054107,"results":"61","hashOfConfig":"46"},{"size":351,"mtime":1675668054106,"results":"62","hashOfConfig":"46"},{"size":1543,"mtime":1677061333202,"results":"63","hashOfConfig":"46"},{"size":3345,"mtime":1677061333204,"results":"64","hashOfConfig":"46"},{"size":1484,"mtime":1685535806419,"results":"65","hashOfConfig":"46"},{"size":5864,"mtime":1685535806419,"results":"66","hashOfConfig":"46"},{"size":592,"mtime":1677061333203,"results":"67","hashOfConfig":"46"},{"size":907,"mtime":1685540564405,"results":"68","hashOfConfig":"46"},{"size":709,"mtime":1685988527856,"results":"69","hashOfConfig":"70"},{"size":266,"mtime":1685697327049,"results":"71","hashOfConfig":"70"},{"size":494,"mtime":1685700994251,"results":"72","hashOfConfig":"70"},{"size":143,"mtime":1685697416441,"results":"73","hashOfConfig":"70"},{"size":83,"mtime":1685700980456,"results":"74","hashOfConfig":"70"},{"size":10668,"mtime":1685988749187,"results":"75","hashOfConfig":"70"},{"size":5512,"mtime":1685973984702,"results":"76","hashOfConfig":"70"},{"size":9918,"mtime":1685646397586,"results":"77","hashOfConfig":"70"},{"size":580,"mtime":1685699471553,"results":"78","hashOfConfig":"70"},{"size":409,"mtime":1685699491222,"results":"79","hashOfConfig":"70"},{"size":859,"mtime":1685700773938,"results":"80","hashOfConfig":"70"},{"size":3361,"mtime":1685554044199,"results":"81","hashOfConfig":"70"},{"size":492,"mtime":1685730326749,"results":"82","hashOfConfig":"70"},{"size":580,"mtime":1685973776505,"results":"83","hashOfConfig":"70"},{"size":1543,"mtime":1685553837479,"results":"84","hashOfConfig":"70"},{"size":592,"mtime":1685553837480,"results":"85","hashOfConfig":"70"},{"size":351,"mtime":1685553837489,"results":"86","hashOfConfig":"70"},{"size":525,"mtime":1685553837492,"results":"87","hashOfConfig":"70"},{"size":1370,"mtime":1685556415608,"results":"88","hashOfConfig":"70"},{"size":2974,"mtime":1685558319108,"results":"89","hashOfConfig":"70"},{"size":2919,"mtime":1685988620668,"results":"90","hashOfConfig":"70"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10env2g",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},"1a2vvb6",{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},"/Users/rajeshbagul/code/connect-account-creator/src/index.js",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/App.js",["236"],[],"import { BrowserRouter } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { LandingPage } from \"./Pages\";\nimport Router from \"./Routes/Router\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Router />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/rajeshbagul/code/connect-account-creator/src/Pages/index.js",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Pages/LandingPage/LandingPage.jsx",["237","238","239","240","241","242","243","244","245","246"],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/index.js",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/NavBar/NavBar.jsx",["247","248"],[],"import { AppBar, Toolbar, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport Icons from \"../Icons/icons\";\nimport \"./NavBar.scss\";\nfunction NavBar() {\n  return (\n    <AppBar\n      position=\"static\"\n      classes={{\n        root: \"navigation-bar\",\n      }}\n    >\n      <Toolbar variant=\"dense\" classes={{ root: \"tool-bar\" }}>\n        <Icons.phyllo_logo />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default NavBar;\n",[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/Background/Background.jsx",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/Icons/icons.jsx",["249"],[],"/Users/rajeshbagul/code/connect-account-creator/src/Routes/Router.jsx",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Routes/RouteMapping.js",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Pages/ErrorPage/ErrorPage.jsx",["250","251","252","253","254"],[],"/Users/rajeshbagul/code/connect-account-creator/src/Pages/GenericPage/GenericPage.jsx",["255","256"],[],"/Users/rajeshbagul/code/connect-account-creator/src/Pages/SuccessPage/SuccessPage.jsx",["257","258","259"],[],"/Users/rajeshbagul/code/connect-account-creator/src/Pages/AbandonedPage/AbandonedPage.jsx",["260","261","262","263","264","265"],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/GenericMessage/GenericMessage.jsx",["266"],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/PrimaryButton/PrimaryButton.jsx",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/InvertedPrimaryButton/InvertedPrimaryButton.jsx",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/ButtonWithGlyphIcon/ButtonWithGlyphIcon.jsx",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/GenericMessage/InstagramGenericMessage.jsx",["267","268"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { launchSDK } from \"../../utils/helpers\";\nimport {\n  InvertedPrimaryButton,\n  PrimaryButton,\n  FullScreenLoader,\n} from \"../index\";\nimport \"./GenericMessage.scss\";\nfunction InstagramGenericMessage() {\n  const [loader, SetLoader] = useState(false);\n  const navigate = useNavigate();\n  return (\n    <div className=\"message-container\">\n      <FullScreenLoader showLoader={loader} />\n      <h2 className=\"message-title\">Before you proceed, please remember</h2>\n      <div>\n        <p className=\"message-point\">\n          Instagram has some mandatory login requirements. This allows us to get\n          your profile, audience, and campaign data.\n        </p>\n        <ol value=\"1\">\n          <li style={{marginBottom:\"32px\"}} className=\"insta-message-point\">\n            Your Instagram account needs to be a Creator or Business account.\n            <p className=\"sub-point\">\n              See how to convert your account to a Creator account.\n            </p>\n            <video\n              className=\"video-container\"\n              controls\n              controlsList=\"nodownload\"\n            >\n              <source\n                src=\"https://cdn.getphyllo.com/guides/videos/instagram/convert_to_creator_type.m4v\"\n                type=\"video/mp4\"\n              />\n              Video\n            </video>\n            <a target=\"_blank\" href=\"https://help.getphyllo.com/?lang=en\">\n              Need more help? Check the help guide here.\n            </a>\n          </li>\n          <li style={{marginBottom:\"32px\"}} className=\"insta-message-point\">\n            Your Instagram account needs to be linked to a Facebook Page.\n            <p className=\"sub-point\">\n              See how to link your Instagram account to a Facebook page.\n            </p>\n            <div >\n              <video\n              className=\"video-container\"\n                controls\n                controlsList=\"nodownload\"\n              >\n                <source\n                  src=\"https://cdn.getphyllo.com/guides/videos/instagram/link_fb_page.m4v\"\n                  type=\"video/mp4\"\n                />\n                Video\n              </video>\n            </div>\n            <a target=\"_blank\" href=\"https://help.getphyllo.com/?lang=en\">\n              Need more help? Check the help guide here.\n            </a>\n          </li>\n          <li className=\"insta-message-point\">\n            The login will happen via Facebook. Please provide all the required permissions.\n          </li>\n          <li className=\"insta-message-point\">\n            While logging in, please select the correct combination of Instagram\n            account and Facebook page.\n          </li>\n        </ol>\n      </div>\n      <div className=\"button-group\">\n        <PrimaryButton\n          onClick={() => launchSDK(SetLoader, navigate)}\n          htmlType=\"submit\"\n          label=\"Proceed\"\n          style={{ marginRight: \"24px\" }}\n          // loading={loading}\n        />\n        <InvertedPrimaryButton\n          onClick={() => navigate(ROUTE_LANDING_PAGE)}\n          htmlType=\"submit\"\n          label=\"Back\"\n          // loading={loading}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default InstagramGenericMessage;\n","/Users/rajeshbagul/code/connect-account-creator/src/utils/constants.js",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/utils/helpers.js",[],[],"/Users/rajeshbagul/code/connect-account-creator/src/Components/FullScreenLoader/FullScreenLoader.jsx",["269"],[],"import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from \"@mui/material/Button\";\n\nexport default function FullScreenLoader({ showLoader }) {\n  const [open, setOpen] = React.useState(showLoader);\n\n  React.useEffect(() => {\n    setOpen(showLoader);\n  }, [showLoader]);\n  return (\n    <div>\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","/Users/rajeshbagul/code/connect-account-creator/src/Pages/InstaEducationPage/InstaEducation.jsx",["270"],[],"/Users/rajeshbagul/code/ai-hackathon/src/index.js",["271","272"],[],"import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport * as Sentry from \"@sentry/react\";\nimport { BrowserTracing } from \"@sentry/tracing\";\n\n// Sentry.setTag(\"project\", \"Connect creator account microsite\");\n\n// Sentry.init({\n//   dsn: process.env.REACT_APP_SENTRY_API_KEY,\n//   integrations: [new BrowserTracing()],\n\n//   // Set tracesSampleRate to 1.0 to capture 100%\n//   // of transactions for performance monitoring.\n//   // We recommend adjusting this value in production\n//   tracesSampleRate: 1.0,\n// });\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <>\n  <StrictMode>\n    <App />\n  </StrictMode>\n  </>\n);\n","/Users/rajeshbagul/code/ai-hackathon/src/App.js",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Routes/Router.jsx",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Pages/index.js",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Routes/RouteMapping.js",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Pages/LandingPage/LandingPage.jsx",["273","274","275","276","277","278","279","280","281","282","283","284","285"],[],"import { useEffect, useRef, useState } from \"react\";\nimport { message } from \"antd\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport Icons from \"../../Components/Icons/icons\";\nimport { Background, ButtonWithGlyphIcon, FullScreenLoader, NavBar, PrimaryButton } from \"../../Components/index\";\nimport InputField from \"../../Components/InputField/InputField\";\nimport \"./LandingPage.scss\"\nimport TagsFilter from \"../../Components/TagsFilter/TagsFilter\";\n// import { generatePost } from \"../../utils/api\";\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { languages } from \"../../utils/constants\";\nimport { Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Upload } from 'antd';\nimport { Skeleton } from \"@mui/material\";\nimport { generatePost, uploadImage } from \"../../utils/api\";\nimport ColumnGroup from \"antd/es/table/ColumnGroup\";\nconst { TextArea } = Input;\n\nconst getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction LandingPage({ platform }) {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [urlSearchInput, setUrlSearchInput] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [recommendationNumber, setRecommendationNumber] = useState(3);\n  const [wordsLimit, setWordsLimit] = useState(300);\n  const [language, setLanguage] = useState(\"en\");\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [fileList, setFileList] = useState([]);\n  const [uploadedImageUrl, setUploadedImageUrl] = useState('');\n  const handleCancel = () => setPreviewOpen(false);\n  const [contentPosition, setContentPosition] = useState(\"center\")\n  const [resultLoading, setResultLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handlePreview = async (file) => {\n    const isPNG = file.type === 'image/png';\n    if (!isPNG) {\n      message.error({\n        content: \"Please select only PNG image!\",\n        style: {\n          marginTop: \"5vh\",\n        },\n        duration: 1.5,\n        maxCount: 1,\n      })\n      return isPNG || Upload.LIST_IGNORE;\n    }\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview);\n    setPreviewOpen(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n  const handleChange = async ({ fileList: newFileList }) => {\n    setFileList(newFileList)\n    console.log(newFileList)\n    const formData = new FormData();\n    formData.append('file', newFileList[0].originFileObj);\n    const responseUrl = await uploadImage(formData)\n    console.log(responseUrl)\n    setUploadedImageUrl(responseUrl)\n\n\n\n  };\n  const uploadButton = (\n    <div style={{ width: \"100%\" }}>\n      <PlusOutlined />\n      <div\n        style={{\n          marginTop: 5,\n        }}\n      >\n        Upload Image\n      </div>\n    </div>\n  );\n  const asyncRequest = async ({ file, onSuccess }) => {\n    const isPNG = file.type === 'image/png';\n    const isJPG = file.type === 'image/jpeg' || file.type === 'image/jpg';\n\n    if (!isPNG && !isJPG) {\n      message.error({\n        content: \"Please select only PNG or JPG image!\",\n        style: {\n          marginTop: \"5vh\",\n        },\n        duration: 1.5,\n        maxCount: 1,\n      });\n      setFileList([])\n    }\n    setTimeout(() => {\n      onSuccess(\"ok\");\n    }, 0);\n  }\n\n\n\n  const handleShowResults = async () => {\n    setResultLoading(true)\n    setContentPosition(\"flex-start\")\n    setSearchResults([])\n    try {\n      let imageUrl;\n      if (uploadedImageUrl) {\n        imageUrl = uploadedImageUrl\n      } else if (urlSearchInput) {\n        imageUrl = urlSearchInput\n      } else imageUrl = \"\"\n      const response = await generatePost(imageUrl, description, recommendationNumber, wordsLimit, language, platform.toUpperCase())\n      console.log(response);\n      setSearchResults(response)\n      setResultLoading(false)\n\n\n    } catch (error) {\n\n    }\n  }\n\n  if (isLoading) {\n    return <FullScreenLoader showLoader={isLoading} />;\n  }\n\n  const getPlatformArr = () => {\n    let arr;\n    if (platform === \"Twitter\") {\n      arr = [100, 200, 300]\n    } else arr = [100, 200, 300, 400, 500];\n\n    return arr;\n  }\n\n  console.log(searchResults);\n  return (\n    <>\n      <div className=\"background-main\" style={{ justifyContent: contentPosition }}>\n        <Box className=\"background-content\">\n          <NavBar />\n          <Box className=\"landing-page-body\">\n            <Box>\n              <InputField\n                inputLabel=\"Enter Image Url\"\n                placeholder=\"start typing\"\n                value={urlSearchInput}\n                onChange={(e) => {\n                  setUrlSearchInput(e.target.value);\n                }}\n                autoFocus\n              />\n\n              <Box className=\"upload-container\">\n                <Upload\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                  listType=\"picture-card\"\n                  fileList={fileList}\n                  customRequest={asyncRequest}\n                  onPreview={handlePreview}\n                  onChange={handleChange}\n                >\n                  {fileList.length >= 1 ? null : uploadButton}\n                </Upload>\n                <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\n                  <img\n                    alt=\"example\"\n                    style={{\n                      width: '100%',\n                    }}\n                    src={previewImage}\n                  />\n                </Modal>\n              </Box>\n\n              <Box sx={{ marginTop: \"10px\" }}>\n                <label style={{ marginBottom: \"5px\" }} htmlFor=\"input-field\" className=\"input-label\" >\n                  Enter Description\n                </label>\n                <TextArea style={{ marginTop: \"10px\" }} rows={4} placeholder=\"start typing\" onChange={(e) => {\n                  setDescription(e.target.value);\n                }} />\n              </Box>\n\n              <Box>\n                <FormControl sx={{ minWidth: \"45%\", mt: 5, mr: \"10%\" }}>\n                  <InputLabel id=\"demo-simple-select-helper-label\">Recommendation number</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={recommendationNumber}\n                    label=\"Recommendation Number\"\n                    onChange={(event) => setRecommendationNumber(event.target.value)}\n                  >\n                    {[1, 2, 3, 4, 5].map((value) => (\n                      <MenuItem value={value}>{value}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <FormControl sx={{ minWidth: \"45%\", mt: 5 }}>\n                  <InputLabel id=\"demo-simple-select-helper-label\">Words limit</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={wordsLimit}\n                    label=\"Words limit\"\n                    onChange={(event) => setWordsLimit(event.target.value)}\n                  >\n\n                    {getPlatformArr().map((value) => (\n                      <MenuItem value={value}>{value}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Box>\n              <Box>\n                <FormControl sx={{ minWidth: \"45%\", mt: 5 }}>\n                  <InputLabel id=\"demo-simple-select-helper-label\">Select language</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={language}\n                    label=\"Select language\"\n                    onChange={(event) => setLanguage(event.target.value)}\n                  >\n                    {languages.map((value) => (\n                      <MenuItem value={value.code}>{value.name}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Box>\n              <Box className=\"showResultButton\">\n                <PrimaryButton label=\"Generate Post\"\n                  onClick={() => handleShowResults()}\n                  disabled={description.length === 0}\n                />\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        {contentPosition !== \"center\" && <Box className=\"result-container\">\n          {resultLoading && <Box className=\"result-loading\" >\n            <Skeleton className=\"loading-img\" key={1} sx={{ display: \"flex\", margin: \"auto\" }} variant=\"rounded\" width={\"300px\"} height={150} />\n            <Skeleton key={1} variant=\"rounded\" width={\"100%\"} height={120} />\n            <Skeleton key={2} variant=\"rounded\" width={\"100%\"} height={120} />\n            <Skeleton key={3} variant=\"rounded\" width={\"100%\"} height={120} />\n            <Skeleton key={4} variant=\"rounded\" width={\"100%\"} height={120} />\n          </Box>}\n          {searchResults && <Box>\n            {(uploadedImageUrl || urlSearchInput) && <img src={uploadedImageUrl ? uploadedImageUrl : urlSearchInput} />}\n            <Box className=\"result-text\">\n              {searchResults.map((recommendation) => {\n                return (\n                  <Box className=\"recommendation\" onClick={() => {\n                    navigator.clipboard.writeText(recommendation)\n                    message.success({\n                      content: \"Copied to clipboard\",\n                      style: {\n                        marginTop: \"5vh\",\n                      },\n                      duration: 1.5,\n                      maxCount: 1,\n                    })\n                  }} >\n                    <p>{recommendation}</p>\n                  </Box>\n                )\n              })}\n            </Box>\n          </Box>}\n        </Box>}\n\n      </div>\n    </>\n  );\n}\n\n\nexport default LandingPage;\n","/Users/rajeshbagul/code/ai-hackathon/src/utils/api.js",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/utils/constants.js",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/index.js",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/PlatformIconBox/PlatformIconBox.jsx",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/Icons/icons.jsx",["286","287"],[],"import { ReactComponent as phyllo_logo } from \"./phyllo_logo.svg\";\nimport { ReactComponent as instagramIcon } from \"./instagram_icon.svg\";\nimport { ReactComponent as youtubeIcon } from \"./youtube_icon.svg\";\nimport { ReactComponent as twitchIcon } from \"./twitch_icon.svg\";\nimport { ReactComponent as twitterIcon } from \"./twitter_icon.svg\";\nimport { ReactComponent as facebookIcon } from \"./facebook_icon.svg\";\nimport { ReactComponent as otherPlatformsIcons } from \"./add_other_platforms.svg\";\nimport { ReactComponent as icon_close } from \"./icon_close.svg\";\n\nimport { ReactComponent as twitter_icon } from \"./twitter_icon.svg\";\nimport { ReactComponent as linkedin_logo } from \"./linkedin_logo.svg\";\nexport default {\n  phyllo_logo,\n  instagramIcon,\n  youtubeIcon,\n  twitchIcon,\n  twitterIcon,\n  facebookIcon,\n  icon_close,\n  linkedin_logo,\n  twitter_icon,\n};\n","/Users/rajeshbagul/code/ai-hackathon/src/analytics/index.js",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/Background/Background.jsx",["288"],[],"import React from \"react\";\nimport NavBar from \"../NavBar/NavBar\";\nimport \"./Background.scss\";\n\nconst Background = ({ children, contentPosition = \"center\" }) => {\n  return (<></>)\n    // <div className=\"background-main\" style={{ justifyContent: contentPosition }}>\n    //   {/* <div className=\"background-card\">  */}\n    //   <div className=\"background-content\">\n    //     <NavBar />\n    //     {children}\n    //   </div>\n    //   {/* </div>  */}\n    // </div>\n\n}\n\nexport default Background;\n","/Users/rajeshbagul/code/ai-hackathon/src/Components/NavBar/NavBar.jsx",["289","290","291"],[],"import { AppBar, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport Icons from \"../Icons/icons\";\nimport \"./NavBar.scss\";\nfunction NavBar() {\n  return (\n    <AppBar\n      position=\"static\"\n      classes={{\n        root: \"navigation-bar\",\n      }}\n    >\n      <Toolbar variant=\"dense\" classes={{ root: \"tool-bar\" }}>\n        {/* <Icons.phyllo_logo /> */}\n        <Box className=\"img-box\" >\n        <img src=\"social.png\" alt=\"PNG Image\"></img>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default NavBar;\n","/Users/rajeshbagul/code/ai-hackathon/src/Components/ButtonWithGlyphIcon/ButtonWithGlyphIcon.jsx",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/FullScreenLoader/FullScreenLoader.jsx",["292"],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/InvertedPrimaryButton/InvertedPrimaryButton.jsx",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/PrimaryButton/PrimaryButton.jsx",[],[],"/Users/rajeshbagul/code/ai-hackathon/src/Components/InputField/InputField.jsx",["293"],[],"import { Input } from \"antd\";\nimport React from \"react\";\nimport \"./InputField.scss\";\nimport PropTypes from 'prop-types';\n\n\nexport default function InputField({ inputLabel, placeholder, errorMessage = \"\", hasError = false, ...otherParams }) {\n  // whatever label is passed in, name will be the same, but formatted to lower case, with spaces replaced with underscores\n  const name = inputLabel.toLowerCase().replaceAll(\" \", \"_\");\n  const fieldLabel = inputLabel[0].toUpperCase() + inputLabel.slice(1);\n  return (\n    <div className=\"input-field-container\">\n      <label htmlFor=\"input-field\" className=\"input-label\" >\n        {`${fieldLabel} ${otherParams.showRequiredIcon ? \"*\" : \"\"}`}\n      </label>\n      <div className=\"input-icon-container\" {...otherParams.inputContainerStyle}>\n        <Input\n          className={`input-field`}\n          placeholder={placeholder}\n          name={name}\n          style={{\n            fontSize: \"14px\",\n            borderWidth: \"1.5px\",\n            borderRadius: \"4px\",\n            borderColor: hasError ? \"#af0606\" : \"\",\n            // borderColor: \"#e8e8f0\",\n            // border: \"1.5px solid #e8e8f0\",\n          }}\n          {...otherParams}\n        />\n        {/* <div className=\"input-right-icon\">{otherParams.suffix}</div> */}\n      </div>\n      <span className=\"input-error-message\">{errorMessage}</span>\n    </div>\n  );\n}\n\n","/Users/rajeshbagul/code/ai-hackathon/src/Components/TagsFilter/TagsFilter.jsx",["294","295","296","297","298"],[],"import { Chip, TextField } from \"@mui/material\";\nimport Icons from \"../Icons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TagsFilter.scss\";\n\nconst TagsFilter = ({ type, selectedTags, setSelectedTags }) => {\n  // const [tags, setTags] = useState(selectedTags);\n\n  // useEffect(() => {\n  //   if (getFilterValue) getFilterValue(tags);\n  // }, [tags]);\n  // console.log(selectedTags,tags)\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      const tag = event.target.value.trim();\n      if (tag.length > 0 && !selectedTags.includes(tag)) {\n        if (type === \"multi_select_text\") {\n          setSelectedTags([...selectedTags, tag]);\n          // if (getFilterValue) getFilterValue([...selectedTags, tag]);\n        } else {\n          setSelectedTags(tag);\n          // if (getFilterValue) getFilterValue(tag);\n        }\n        event.target.value = \"\";\n      }\n    }\n  };\n\n  const handleDelete = (e, tagToDelete) => {\n    e.preventDefault();\n    if (type === \"multi_select_text\") {\n      const newTags = selectedTags.filter((tag) => tag !== tagToDelete);\n      setSelectedTags(newTags);\n      // if (getFilterValue) getFilterValue(newTags);\n    } else {\n      setSelectedTags(\"\");\n      // if (getFilterValue) getFilterValue(\"\");\n    }\n  };\n\n  return (\n    <div className=\"tag-filter-container\">\n      <TextField\n        className=\"my-textfield\"\n        onKeyDown={handleKeyDown}\n        variant=\"outlined\"\n        fullWidth\n        hiddenLabel\n        placeholder=\"Enter keyword\"\n        size=\"small\"\n        InputProps={{ className: \"tag-filter-input\" }}\n        onClick={(e) => e.stopPropagation()}\n        sx={{\n          borderColor: \"var(--insightIq-primary-color)\",\n        }}\n      />\n      <div className=\"chip-container\">\n        {type === \"multi_select_text\"\n          ? selectedTags.map((tag, index) => (\n              <Chip\n                key={index}\n                label={tag}\n                sx={{ backgroundColor: \"#F5F5F7\", margin: \"0px 4px 4px 0px\" }}\n                onDelete={(e) => {\n                  handleDelete(e, tag);\n                }}\n                deleteIcon={\n                  <Icons.icon_close\n                    onMouseDown={(e) => {\n                      e.stopPropagation();\n                    }}\n                  />\n                }\n              />\n            ))\n          : setSelectedTags && (\n              <Chip\n                label={setSelectedTags}\n                sx={{ backgroundColor: \"#F5F5F7\", margin: \"0px 4px 4px 0px\" }}\n                onDelete={(e) => {\n                  handleDelete(e, setSelectedTags);\n                }}\n                deleteIcon={\n                  <Icons.icon_close\n                    onMouseDown={(e) => {\n                      e.stopPropagation();\n                    }}\n                  />\n                }\n              />\n            )}\n      </div>\n    </div>\n  );\n};\n\nexport default TagsFilter;\n","/Users/rajeshbagul/code/ai-hackathon/src/Pages/IntroPage/IntroPage.jsx",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],[],"import { Box } from \"@mui/system\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MICROSITE_CONNECT_ACCOUNT_SUCCESS, MICROSITE_CONNECT_MORE_ACCOUNTS, trackEvent } from \"../../analytics\";\nimport { Background, FullScreenLoader, NavBar, PlatformIconBox } from \"../../Components\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { getWorkplatformDetails } from \"../../utils/api\";\nimport { CONNECTED_STORAGE_WORK_PLATFORM_ID, STORAGE_AUTH_DATA, STORAGE_AUTH_TENANT_APP_NAME } from \"../../utils/constants\";\nimport \"./IntroPage.scss\"\nimport Typewriter from \"typewriter-effect\";\nimport Icons from \"../../Components/Icons/icons\";\nimport LandingPage from \"../LandingPage/LandingPage\";\n\nfunction IntroPage() {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [platform, setPlatform] = useState(\"\");\n  const [hideIntroPage, setHideIntroPage] = useState(false)\n\n  if (isLoading) return <FullScreenLoader showLoader={isLoading} />;\n  const handlePlatformClick = (selectedPlatform) => {\n    setPlatform(selectedPlatform)\n    setHideIntroPage(true)\n  }\n  return (\n    <>\n      {!hideIntroPage && <Box className=\"intro-page-body\">\n        <h1>The Ultimate AI Writer for Exceptional Content Creation</h1>\n        <Box >\n          <Typewriter\n            options={{\n              strings: [\n                \"Twitter Tweets.\",\n                \"LinkdIn Posts.\",\n                \"Facebook Posts.\",\n                \"Instagram Posts.\"\n                ,\n              ],\n              autoStart: true,\n              loop: true,\n              deleteSpeed: 50,\n            }}\n            wrapperClassName=\"typed-words clipped\"\n          />\n        </Box>\n\n        <Box className=\"platform-main-container\">\n          \n          <PlatformIconBox icon={<Icons.facebookIcon />}\n          key={2}\n            text={\"Facebook\"}\n            onClickPlatform={()=>handlePlatformClick(\"facebook\")}\n          />\n          <PlatformIconBox icon={<Icons.twitter_icon />}\n          key={3}\n            text={\"Twitter\"}\n            onClickPlatform={()=>handlePlatformClick(\"twitter\")}\n          />\n          <PlatformIconBox\n          key={1}\n            icon={<Icons.instagramIcon />}\n            text={\"Instagram\"}\n            onClickPlatform={()=>handlePlatformClick(\"instagram\")}\n          />\n          <PlatformIconBox icon={<Icons.linkedin_logo />}\n          key={4}\n            text={\"LinkdIn\"}\n            onClickPlatform={()=>handlePlatformClick(\"Linkedin\")}\n          />\n          <PlatformIconBox icon={<Icons.youtubeIcon />}\n          key={4}\n            text={\"YouTube\"}\n            onClickPlatform={()=>handlePlatformClick(\"YouTube\")}\n          />\n        </Box>\n      </Box>}\n      {\n        platform && hideIntroPage && <LandingPage platform={platform} />\n      }\n    </>\n  );\n}\n\nexport default IntroPage;\n",{"ruleId":"318","severity":1,"message":"319","line":3,"column":10,"nodeType":"320","messageId":"321","endLine":3,"endColumn":21},{"ruleId":"318","severity":1,"message":"322","line":6,"column":22,"nodeType":"320","messageId":"321","endLine":6,"endColumn":41},{"ruleId":"318","severity":1,"message":"323","line":6,"column":61,"nodeType":"320","messageId":"321","endLine":6,"endColumn":67},{"ruleId":"318","severity":1,"message":"324","line":35,"column":24,"nodeType":"320","messageId":"321","endLine":35,"endColumn":39},{"ruleId":"325","severity":1,"message":"326","line":94,"column":6,"nodeType":"327","endLine":94,"endColumn":8,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":165,"column":40,"nodeType":"331","messageId":"332","endLine":165,"endColumn":60},{"ruleId":"329","severity":1,"message":"333","line":169,"column":25,"nodeType":"331","messageId":"332","endLine":169,"endColumn":48},{"ruleId":"329","severity":1,"message":"334","line":176,"column":40,"nodeType":"331","messageId":"332","endLine":176,"endColumn":61},{"ruleId":"329","severity":1,"message":"335","line":179,"column":40,"nodeType":"331","messageId":"332","endLine":179,"endColumn":62},{"ruleId":"329","severity":1,"message":"336","line":182,"column":40,"nodeType":"331","messageId":"332","endLine":182,"endColumn":61},{"ruleId":"329","severity":1,"message":"337","line":185,"column":40,"nodeType":"331","messageId":"332","endLine":185,"endColumn":60},{"ruleId":"318","severity":1,"message":"338","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":37},{"ruleId":"329","severity":1,"message":"339","line":14,"column":9,"nodeType":"331","messageId":"332","endLine":14,"endColumn":30},{"ruleId":"340","severity":1,"message":"341","line":10,"column":1,"nodeType":"342","endLine":19,"endColumn":3},{"ruleId":"318","severity":1,"message":"343","line":7,"column":3,"nodeType":"320","messageId":"321","endLine":7,"endColumn":34},{"ruleId":"318","severity":1,"message":"323","line":11,"column":63,"nodeType":"320","messageId":"321","endLine":11,"endColumn":69},{"ruleId":"318","severity":1,"message":"344","line":14,"column":10,"nodeType":"320","messageId":"321","endLine":14,"endColumn":34},{"ruleId":"318","severity":1,"message":"345","line":15,"column":10,"nodeType":"320","messageId":"321","endLine":15,"endColumn":19},{"ruleId":"318","severity":1,"message":"346","line":18,"column":18,"nodeType":"320","messageId":"321","endLine":18,"endColumn":27},{"ruleId":"318","severity":1,"message":"347","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":31},{"ruleId":"318","severity":1,"message":"323","line":4,"column":38,"nodeType":"320","messageId":"321","endLine":4,"endColumn":44},{"ruleId":"318","severity":1,"message":"323","line":5,"column":40,"nodeType":"320","messageId":"321","endLine":5,"endColumn":46},{"ruleId":"318","severity":1,"message":"348","line":15,"column":21,"nodeType":"320","messageId":"321","endLine":15,"endColumn":33},{"ruleId":"349","severity":1,"message":"350","line":41,"column":13,"nodeType":"331","endLine":47,"endColumn":14},{"ruleId":"318","severity":1,"message":"351","line":1,"column":10,"nodeType":"320","messageId":"321","endLine":1,"endColumn":26},{"ruleId":"318","severity":1,"message":"343","line":9,"column":3,"nodeType":"320","messageId":"321","endLine":9,"endColumn":34},{"ruleId":"318","severity":1,"message":"323","line":13,"column":63,"nodeType":"320","messageId":"321","endLine":13,"endColumn":69},{"ruleId":"318","severity":1,"message":"344","line":16,"column":65,"nodeType":"320","messageId":"321","endLine":16,"endColumn":89},{"ruleId":"318","severity":1,"message":"345","line":17,"column":10,"nodeType":"320","messageId":"321","endLine":17,"endColumn":19},{"ruleId":"318","severity":1,"message":"346","line":21,"column":18,"nodeType":"320","messageId":"321","endLine":21,"endColumn":27},{"ruleId":"318","severity":1,"message":"351","line":1,"column":10,"nodeType":"320","messageId":"321","endLine":1,"endColumn":26},{"ruleId":"352","severity":1,"message":"353","line":40,"column":13,"nodeType":"331","messageId":"354","endLine":40,"endColumn":75,"fix":"355"},{"ruleId":"352","severity":1,"message":"353","line":62,"column":13,"nodeType":"331","messageId":"354","endLine":62,"endColumn":75,"fix":"356"},{"ruleId":"318","severity":1,"message":"357","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":14},{"ruleId":"318","severity":1,"message":"323","line":3,"column":22,"nodeType":"320","messageId":"321","endLine":3,"endColumn":28},{"ruleId":"318","severity":1,"message":"358","line":4,"column":13,"nodeType":"320","messageId":"321","endLine":4,"endColumn":19},{"ruleId":"318","severity":1,"message":"359","line":5,"column":10,"nodeType":"320","messageId":"321","endLine":5,"endColumn":24},{"ruleId":"318","severity":1,"message":"360","line":1,"column":10,"nodeType":"320","messageId":"321","endLine":1,"endColumn":19},{"ruleId":"318","severity":1,"message":"361","line":1,"column":21,"nodeType":"320","messageId":"321","endLine":1,"endColumn":27},{"ruleId":"318","severity":1,"message":"362","line":5,"column":23,"nodeType":"320","messageId":"321","endLine":5,"endColumn":38},{"ruleId":"318","severity":1,"message":"363","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":13},{"ruleId":"318","severity":1,"message":"364","line":7,"column":10,"nodeType":"320","messageId":"321","endLine":7,"endColumn":20},{"ruleId":"318","severity":1,"message":"322","line":7,"column":22,"nodeType":"320","messageId":"321","endLine":7,"endColumn":41},{"ruleId":"318","severity":1,"message":"365","line":10,"column":8,"nodeType":"320","messageId":"321","endLine":10,"endColumn":18},{"ruleId":"318","severity":1,"message":"366","line":14,"column":8,"nodeType":"320","messageId":"321","endLine":14,"endColumn":22},{"ruleId":"318","severity":1,"message":"367","line":16,"column":18,"nodeType":"320","messageId":"321","endLine":16,"endColumn":35},{"ruleId":"318","severity":1,"message":"368","line":23,"column":8,"nodeType":"320","messageId":"321","endLine":23,"endColumn":19},{"ruleId":"318","severity":1,"message":"369","line":35,"column":9,"nodeType":"320","messageId":"321","endLine":35,"endColumn":17},{"ruleId":"318","severity":1,"message":"348","line":36,"column":21,"nodeType":"320","messageId":"321","endLine":36,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":267,"column":54,"nodeType":"331","endLine":267,"endColumn":120},{"ruleId":"318","severity":1,"message":"372","line":7,"column":28,"nodeType":"320","messageId":"321","endLine":7,"endColumn":47},{"ruleId":"340","severity":1,"message":"341","line":12,"column":1,"nodeType":"342","endLine":22,"endColumn":3},{"ruleId":"318","severity":1,"message":"323","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"318","severity":1,"message":"338","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":37},{"ruleId":"318","severity":1,"message":"363","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":13},{"ruleId":"373","severity":1,"message":"374","line":17,"column":9,"nodeType":"331","endLine":17,"endColumn":47},{"ruleId":"318","severity":1,"message":"357","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":14},{"ruleId":"318","severity":1,"message":"375","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":17},{"ruleId":"318","severity":1,"message":"360","line":3,"column":17,"nodeType":"320","messageId":"321","endLine":3,"endColumn":26},{"ruleId":"318","severity":1,"message":"376","line":3,"column":28,"nodeType":"320","messageId":"321","endLine":3,"endColumn":36},{"ruleId":"318","severity":1,"message":"375","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":17},{"ruleId":"329","severity":1,"message":"377","line":69,"column":19,"nodeType":"331","messageId":"332","endLine":73,"endColumn":21},{"ruleId":"329","severity":1,"message":"377","line":85,"column":19,"nodeType":"331","messageId":"332","endLine":89,"endColumn":21},{"ruleId":"318","severity":1,"message":"360","line":2,"column":17,"nodeType":"320","messageId":"321","endLine":2,"endColumn":26},{"ruleId":"318","severity":1,"message":"361","line":2,"column":38,"nodeType":"320","messageId":"321","endLine":2,"endColumn":44},{"ruleId":"318","severity":1,"message":"378","line":4,"column":10,"nodeType":"320","messageId":"321","endLine":4,"endColumn":43},{"ruleId":"318","severity":1,"message":"343","line":4,"column":45,"nodeType":"320","messageId":"321","endLine":4,"endColumn":76},{"ruleId":"318","severity":1,"message":"379","line":4,"column":78,"nodeType":"320","messageId":"321","endLine":4,"endColumn":88},{"ruleId":"318","severity":1,"message":"364","line":5,"column":10,"nodeType":"320","messageId":"321","endLine":5,"endColumn":20},{"ruleId":"318","severity":1,"message":"323","line":5,"column":40,"nodeType":"320","messageId":"321","endLine":5,"endColumn":46},{"ruleId":"318","severity":1,"message":"380","line":6,"column":10,"nodeType":"320","messageId":"321","endLine":6,"endColumn":28},{"ruleId":"318","severity":1,"message":"381","line":7,"column":10,"nodeType":"320","messageId":"321","endLine":7,"endColumn":32},{"ruleId":"318","severity":1,"message":"382","line":8,"column":10,"nodeType":"320","messageId":"321","endLine":8,"endColumn":44},{"ruleId":"318","severity":1,"message":"383","line":8,"column":46,"nodeType":"320","messageId":"321","endLine":8,"endColumn":63},{"ruleId":"318","severity":1,"message":"384","line":8,"column":65,"nodeType":"320","messageId":"321","endLine":8,"endColumn":93},{"ruleId":"318","severity":1,"message":"369","line":15,"column":9,"nodeType":"320","messageId":"321","endLine":15,"endColumn":17},{"ruleId":"318","severity":1,"message":"348","line":16,"column":21,"nodeType":"320","messageId":"321","endLine":16,"endColumn":33},{"ruleId":"329","severity":1,"message":"335","line":49,"column":34,"nodeType":"331","messageId":"332","endLine":49,"endColumn":56},{"ruleId":"329","severity":1,"message":"385","line":54,"column":34,"nodeType":"331","messageId":"332","endLine":54,"endColumn":56},{"ruleId":"329","severity":1,"message":"333","line":61,"column":19,"nodeType":"331","messageId":"332","endLine":61,"endColumn":42},{"ruleId":"329","severity":1,"message":"386","line":65,"column":34,"nodeType":"331","messageId":"332","endLine":65,"endColumn":57},{"ruleId":"329","severity":1,"message":"334","line":70,"column":34,"nodeType":"331","messageId":"332","endLine":70,"endColumn":55},"no-unused-vars","'LandingPage' is defined but never used.","Identifier","unusedVar","'ButtonWithGlyphIcon' is defined but never used.","'NavBar' is defined but never used.","'setSearchParams' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'searchParams' and 'setAuthDetails'. Either include them or remove the dependency array.","ArrayExpression",["387"],"react/jsx-pascal-case","Imported JSX component tiktokIcon must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component instagramIcon must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component youtubeIcon must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component facebookIcon must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component twitterIcon must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component twitchIcon must be in PascalCase or SCREAMING_SNAKE_CASE","'Typography' is defined but never used.","Imported JSX component phyllo_logo must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MICROSITE_CONNECT_MORE_ACCOUNTS' is defined but never used.","'STORAGE_WORK_PLATFORM_ID' is defined but never used.","'launchSDK' is defined but never used.","'setLoader' is assigned a value but never used.","'InstagramGenericMessage' is defined but never used.","'setIsLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'CircularProgress' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"388","text":"389"},{"range":"390","text":"389"},"'Button' is defined but never used.","'Sentry' is defined but never used.","'BrowserTracing' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useSearchParams' is defined but never used.","'Icons' is defined but never used.","'Background' is defined but never used.","'TagsFilter' is defined but never used.","'FormHelperText' is defined but never used.","'SelectChangeEvent' is defined but never used.","'ColumnGroup' is defined but never used.","'navigate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'otherPlatformsIcons' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'PropTypes' is defined but never used.","'useState' is defined but never used.","Imported JSX component icon_close must be in PascalCase or SCREAMING_SNAKE_CASE","'MICROSITE_CONNECT_ACCOUNT_SUCCESS' is defined but never used.","'trackEvent' is defined but never used.","'ROUTE_LANDING_PAGE' is defined but never used.","'getWorkplatformDetails' is defined but never used.","'CONNECTED_STORAGE_WORK_PLATFORM_ID' is defined but never used.","'STORAGE_AUTH_DATA' is defined but never used.","'STORAGE_AUTH_TENANT_APP_NAME' is defined but never used.","Imported JSX component twitter_icon must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component linkedin_logo must be in PascalCase or SCREAMING_SNAKE_CASE",{"desc":"391","fix":"392"},[1539,1539]," rel=\"noreferrer\"",[2381,2381],"Update the dependencies array to be: [searchParams, setAuthDetails]",{"range":"393","text":"394"},[3889,3891],"[searchParams, setAuthDetails]"]