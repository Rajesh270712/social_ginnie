{"ast":null,"code":"import _slicedToArray from \"/Users/rajeshbagul/code/ai-hackathon/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\n  return function (prefixCls) {\n    var _useToken = useToken(),\n      _useToken2 = _slicedToArray(_useToken, 3),\n      theme = _useToken2[0],\n      token = _useToken2[1],\n      hashId = _useToken2[2];\n    var _useContext = useContext(ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls,\n      iconPrefixCls = _useContext.iconPrefixCls,\n      csp = _useContext.csp;\n    var rootPrefixCls = getPrefixCls();\n    // Shared config\n    var sharedConfig = {\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      nonce: function nonce() {\n        return csp === null || csp === void 0 ? void 0 : csp.nonce;\n      }\n    };\n    // Generate style for all a tags in antd component.\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: ['Shared', rootPrefixCls]\n    }), function () {\n      return [{\n        // Link\n        '&': genLinkStyle(token)\n      }];\n    });\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [component, prefixCls, iconPrefixCls]\n    }), function () {\n      var _statisticToken = statisticToken(token),\n        proxyToken = _statisticToken.token,\n        flush = _statisticToken.flush;\n      var customComponentToken = token[component];\n      var defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(mergeToken(proxyToken, customComponentToken !== null && customComponentToken !== void 0 ? customComponentToken : {})) : getDefaultToken;\n      var mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), customComponentToken);\n      var componentCls = \".\".concat(prefixCls);\n      var mergedToken = mergeToken(proxyToken, {\n        componentCls: componentCls,\n        prefixCls: prefixCls,\n        iconCls: \".\".concat(iconPrefixCls),\n        antCls: \".\".concat(rootPrefixCls)\n      }, mergedComponentToken);\n      var styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId,\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}","map":{"version":3,"names":["useStyleRegister","useContext","ConfigContext","genCommonStyle","genLinkStyle","mergeToken","statisticToken","useToken","genComponentStyleHook","component","styleFn","getDefaultToken","options","prefixCls","theme","token","hashId","getPrefixCls","iconPrefixCls","csp","rootPrefixCls","sharedConfig","nonce","Object","assign","path","proxyToken","flush","customComponentToken","defaultComponentToken","mergedComponentToken","componentCls","mergedToken","iconCls","antCls","styleInterpolation","overrideComponentToken","resetStyle"],"sources":["/Users/rajeshbagul/code/ai-hackathon/node_modules/antd/es/theme/util/genComponentStyleHook.js"],"sourcesContent":["import { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\n  return prefixCls => {\n    const [theme, token, hashId] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls,\n      csp\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    // Shared config\n    const sharedConfig = {\n      theme,\n      token,\n      hashId,\n      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce\n    };\n    // Generate style for all a tags in antd component.\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: ['Shared', rootPrefixCls]\n    }), () => [{\n      // Link\n      '&': genLinkStyle(token)\n    }]);\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [component, prefixCls, iconPrefixCls]\n    }), () => {\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token);\n      const customComponentToken = token[component];\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(mergeToken(proxyToken, customComponentToken !== null && customComponentToken !== void 0 ? customComponentToken : {})) : getDefaultToken;\n      const mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), customComponentToken);\n      const componentCls = `.${prefixCls}`;\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls,\n        iconCls: `.${iconPrefixCls}`,\n        antCls: `.${rootPrefixCls}`\n      }, mergedComponentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId,\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}