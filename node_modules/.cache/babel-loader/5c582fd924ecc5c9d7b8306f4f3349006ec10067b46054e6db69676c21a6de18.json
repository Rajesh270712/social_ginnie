{"ast":null,"code":"import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nfunction shouldDisableAutoInstrumentation(getCurrentHub) {\n  var clientOptions = _optionalChain([getCurrentHub, 'call', function (_) {\n    return _();\n  }, 'access', function (_2) {\n    return _2.getClient;\n  }, 'call', function (_3) {\n    return _3();\n  }, 'optionalAccess', function (_4) {\n    return _4.getOptions;\n  }, 'call', function (_5) {\n    return _5();\n  }]);\n  var instrumenter = _optionalChain([clientOptions, 'optionalAccess', function (_6) {\n    return _6.instrumenter;\n  }]) || 'sentry';\n  return instrumenter !== 'sentry';\n}\nexport { shouldDisableAutoInstrumentation };","map":{"version":3,"mappings":";;AAEA;;;;;;AAMA;EACA;IAAA;EAAA;IAAA;EAAA;IAAA;EAAA;IAAA;EAAA;IAAA;EAAA;EACA;IAAA;EAAA;EAEA;AACA","names":[],"sources":["/Users/rajeshbagul/code/ai-hackathon/node_modules/src/integrations/node/utils/node-utils.ts"],"sourcesContent":["import type { Hub } from '@sentry/types';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nexport function shouldDisableAutoInstrumentation(getCurrentHub: () => Hub): boolean {\n  const clientOptions = getCurrentHub().getClient()?.getOptions();\n  const instrumenter = clientOptions?.instrumenter || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}