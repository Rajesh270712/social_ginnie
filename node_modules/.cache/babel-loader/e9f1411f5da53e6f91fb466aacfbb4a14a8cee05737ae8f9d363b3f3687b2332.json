{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshbagul/code/ai-hackathon/src/Pages/IntroPage/IntroPage.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MICROSITE_CONNECT_ACCOUNT_SUCCESS, MICROSITE_CONNECT_MORE_ACCOUNTS, trackEvent } from \"../../analytics\";\nimport { Background, FullScreenLoader, NavBar, PlatformIconBox } from \"../../Components\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { getWorkplatformDetails } from \"../../utils/api\";\nimport { CONNECTED_STORAGE_WORK_PLATFORM_ID, STORAGE_AUTH_DATA, STORAGE_AUTH_TENANT_APP_NAME } from \"../../utils/constants\";\nimport \"./IntroPage.scss\";\nimport Typewriter from \"typewriter-effect\";\nimport Icons from \"../../Components/Icons/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction IntroPage() {\n  _s();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [platform, setPlatform] = useState(\"\");\n  const [hideIntroPage, setHideIntroPage] = false;\n  if (isLoading) return /*#__PURE__*/_jsxDEV(FullScreenLoader, {\n    showLoader: isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"!hideIntroPage &&  \", /*#__PURE__*/_jsxDEV(Box, {\n      className: \"intro-page-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Ultimate AI Writer for Exceptional Content Creation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          options: {\n            strings: [\"Twitter Tweets.\", \"LinkdIn Posts.\", \"Facebook Posts.\", \"Instagram Posts.\"],\n            autoStart: true,\n            loop: true,\n            deleteSpeed: 50\n          },\n          wrapperClassName: \"typed-words clipped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"platform-main-container\",\n        children: [/*#__PURE__*/_jsxDEV(PlatformIconBox, {\n          icon: /*#__PURE__*/_jsxDEV(Icons.instagramIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this),\n          text: \"Instagram\",\n          onClickPlatform: () => setPlatform(\"instagram\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlatformIconBox, {\n          icon: /*#__PURE__*/_jsxDEV(Icons.facebookIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 34\n          }, this),\n          text: \"Facebook\",\n          onClickPlatform: () => setPlatform(\"facebook\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlatformIconBox, {\n          icon: /*#__PURE__*/_jsxDEV(Icons.twitter_icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 34\n          }, this),\n          text: \"Twitter\",\n          onClickPlatform: () => setPlatform(\"twitter\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlatformIconBox, {\n          icon: /*#__PURE__*/_jsxDEV(Icons.linkedin_logo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 34\n          }, this),\n          text: \"LinkdIn\",\n          onClickPlatform: () => setPlatform(\"Linkdin\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n}\n_s(IntroPage, \"lmTxb9KtJxYe6uGjPbDbBgDZduQ=\", false, function () {\n  return [useNavigate];\n});\n_c = IntroPage;\nexport default IntroPage;\nvar _c;\n$RefreshReg$(_c, \"IntroPage\");","map":{"version":3,"names":["Box","React","useEffect","useState","useRef","useNavigate","MICROSITE_CONNECT_ACCOUNT_SUCCESS","MICROSITE_CONNECT_MORE_ACCOUNTS","trackEvent","Background","FullScreenLoader","NavBar","PlatformIconBox","ROUTE_LANDING_PAGE","getWorkplatformDetails","CONNECTED_STORAGE_WORK_PLATFORM_ID","STORAGE_AUTH_DATA","STORAGE_AUTH_TENANT_APP_NAME","Typewriter","Icons","IntroPage","navigate","isLoading","setIsLoading","platform","setPlatform","hideIntroPage","setHideIntroPage","strings","autoStart","loop","deleteSpeed"],"sources":["/Users/rajeshbagul/code/ai-hackathon/src/Pages/IntroPage/IntroPage.jsx"],"sourcesContent":["import { Box } from \"@mui/system\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MICROSITE_CONNECT_ACCOUNT_SUCCESS, MICROSITE_CONNECT_MORE_ACCOUNTS, trackEvent } from \"../../analytics\";\nimport { Background, FullScreenLoader, NavBar, PlatformIconBox } from \"../../Components\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { getWorkplatformDetails } from \"../../utils/api\";\nimport { CONNECTED_STORAGE_WORK_PLATFORM_ID, STORAGE_AUTH_DATA, STORAGE_AUTH_TENANT_APP_NAME } from \"../../utils/constants\";\nimport \"./IntroPage.scss\"\nimport Typewriter from \"typewriter-effect\";\nimport Icons from \"../../Components/Icons/icons\";\n\nfunction IntroPage() {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [platform, setPlatform] = useState(\"\");\n  const [hideIntroPage, setHideIntroPage]=(false)\n\n  if (isLoading) return <FullScreenLoader showLoader={isLoading} />;\n\n  return (\n    <>\n     !hideIntroPage &&  <Box className=\"intro-page-body\">\n        <h1>The Ultimate AI Writer for Exceptional Content Creation</h1>\n        <Box >\n          <Typewriter\n            options={{\n              strings: [\n                \"Twitter Tweets.\",\n                \"LinkdIn Posts.\",\n                \"Facebook Posts.\",\n                \"Instagram Posts.\"\n                ,\n              ],\n              autoStart: true,\n              loop: true,\n              deleteSpeed: 50,\n            }}\n            wrapperClassName=\"typed-words clipped\"\n          />\n        </Box>\n\n        <Box className=\"platform-main-container\">\n          <PlatformIconBox\n            icon={<Icons.instagramIcon />}\n            text={\"Instagram\"}\n            onClickPlatform={()=>setPlatform(\"instagram\")}\n          />\n          <PlatformIconBox icon={<Icons.facebookIcon />}\n            text={\"Facebook\"}\n            onClickPlatform={()=>setPlatform(\"facebook\")}\n          />\n          <PlatformIconBox icon={<Icons.twitter_icon />}\n            text={\"Twitter\"}\n            onClickPlatform={()=>setPlatform(\"twitter\")}\n          />\n          <PlatformIconBox icon={<Icons.linkedin_logo />}\n            text={\"LinkdIn\"}\n            onClickPlatform={()=>setPlatform(\"Linkdin\")}\n          />\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default IntroPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}