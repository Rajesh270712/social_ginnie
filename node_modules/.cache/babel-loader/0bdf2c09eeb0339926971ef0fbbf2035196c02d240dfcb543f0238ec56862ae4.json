{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshbagul/code/ai-hackathon/src/Components/InputField/InputField.jsx\";\nimport { Input } from \"antd\";\nimport React from \"react\";\nimport \"./InputField.scss\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputField(_ref) {\n  let {\n    inputLabel,\n    placeholder,\n    errorMessage = \"\",\n    hasError = false,\n    ...otherParams\n  } = _ref;\n  // whatever label is passed in, name will be the same, but formatted to lower case, with spaces replaced with underscores\n  const name = inputLabel.toLowerCase().replaceAll(\" \", \"_\");\n  const fieldLabel = inputLabel[0].toUpperCase() + inputLabel.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-field-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"input-field\",\n      className: \"input-label\",\n      style: {\n        margin_\n      },\n      children: `${fieldLabel} ${otherParams.showRequiredIcon ? \"*\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-icon-container\",\n      ...otherParams.inputContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        className: `input-field`,\n        placeholder: placeholder,\n        name: name,\n        style: {\n          fontSize: \"14px\",\n          borderWidth: \"1.5px\",\n          borderRadius: \"4px\",\n          borderColor: hasError ? \"#af0606\" : \"\"\n          // borderColor: \"#e8e8f0\",\n          // border: \"1.5px solid #e8e8f0\",\n        },\n        ...otherParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input-error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["Input","React","PropTypes","InputField","inputLabel","placeholder","errorMessage","hasError","otherParams","name","toLowerCase","replaceAll","fieldLabel","toUpperCase","slice","margin_","showRequiredIcon","inputContainerStyle","fontSize","borderWidth","borderRadius","borderColor"],"sources":["/Users/rajeshbagul/code/ai-hackathon/src/Components/InputField/InputField.jsx"],"sourcesContent":["import { Input } from \"antd\";\nimport React from \"react\";\nimport \"./InputField.scss\";\nimport PropTypes from 'prop-types';\n\n\nexport default function InputField({ inputLabel, placeholder, errorMessage = \"\", hasError = false, ...otherParams }) {\n  // whatever label is passed in, name will be the same, but formatted to lower case, with spaces replaced with underscores\n  const name = inputLabel.toLowerCase().replaceAll(\" \", \"_\");\n  const fieldLabel = inputLabel[0].toUpperCase() + inputLabel.slice(1);\n  return (\n    <div className=\"input-field-container\">\n      <label htmlFor=\"input-field\" className=\"input-label\" style={{margin_}}>\n        {`${fieldLabel} ${otherParams.showRequiredIcon ? \"*\" : \"\"}`}\n      </label>\n      <div className=\"input-icon-container\" {...otherParams.inputContainerStyle}>\n        <Input\n          className={`input-field`}\n          placeholder={placeholder}\n          name={name}\n          style={{\n            fontSize: \"14px\",\n            borderWidth: \"1.5px\",\n            borderRadius: \"4px\",\n            borderColor: hasError ? \"#af0606\" : \"\",\n            // borderColor: \"#e8e8f0\",\n            // border: \"1.5px solid #e8e8f0\",\n          }}\n          {...otherParams}\n        />\n        {/* <div className=\"input-right-icon\">{otherParams.suffix}</div> */}\n      </div>\n      <span className=\"input-error-message\">{errorMessage}</span>\n    </div>\n  );\n}\n\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,SAAS,MAAM,YAAY;AAAC;AAGnC,eAAe,SAASC,UAAU,OAAmF;EAAA,IAAlF;IAAEC,UAAU;IAAEC,WAAW;IAAEC,YAAY,GAAG,EAAE;IAAEC,QAAQ,GAAG,KAAK;IAAE,GAAGC;EAAY,CAAC;EACjH;EACA,MAAMC,IAAI,GAAGL,UAAU,CAACM,WAAW,EAAE,CAACC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC;EAC1D,MAAMC,UAAU,GAAGR,UAAU,CAAC,CAAC,CAAC,CAACS,WAAW,EAAE,GAAGT,UAAU,CAACU,KAAK,CAAC,CAAC,CAAC;EACpE,oBACE;IAAK,SAAS,EAAC,uBAAuB;IAAA,wBACpC;MAAO,OAAO,EAAC,aAAa;MAAC,SAAS,EAAC,aAAa;MAAC,KAAK,EAAE;QAACC;MAAO,CAAE;MAAA,UAClE,GAAEH,UAAW,IAAGJ,WAAW,CAACQ,gBAAgB,GAAG,GAAG,GAAG,EAAG;IAAC;MAAA;MAAA;MAAA;IAAA,QACrD,eACR;MAAK,SAAS,EAAC,sBAAsB;MAAA,GAAKR,WAAW,CAACS,mBAAmB;MAAA,uBACvE,QAAC,KAAK;QACJ,SAAS,EAAG,aAAa;QACzB,WAAW,EAAEZ,WAAY;QACzB,IAAI,EAAEI,IAAK;QACX,KAAK,EAAE;UACLS,QAAQ,EAAE,MAAM;UAChBC,WAAW,EAAE,OAAO;UACpBC,YAAY,EAAE,KAAK;UACnBC,WAAW,EAAEd,QAAQ,GAAG,SAAS,GAAG;UACpC;UACA;QACF,CAAE;QAAA,GACEC;MAAW;QAAA;QAAA;QAAA;MAAA;IACf;MAAA;MAAA;MAAA;IAAA,QAEE,eACN;MAAM,SAAS,EAAC,qBAAqB;MAAA,UAAEF;IAAY;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAEV;AAAC,KA7BuBH,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}