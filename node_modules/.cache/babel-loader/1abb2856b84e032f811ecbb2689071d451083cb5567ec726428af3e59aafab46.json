{"ast":null,"code":"import { hasTracingEnabled as hasTracingEnabled$1, getCurrentHub } from '@sentry/core';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n * @deprecated This export has moved to `@sentry/core`. This export will be removed from `@sentry/tracing` in v8.\n */\nfunction hasTracingEnabled(maybeOptions) {\n  return hasTracingEnabled$1(maybeOptions);\n}\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope && scope.getTransaction();\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\nexport { getActiveTransaction, hasTracingEnabled, msToSec };","map":{"version":3,"mappings":";;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA,2BACAA,cACA;EACA;AACA;;AAEA;AACA;EACA;EACA;EACA;AACA;;AAEA;AACA;AACA;AACA;AACA;EACA;AACA","names":["maybeOptions"],"sources":["/Users/rajeshbagul/code/connect-account-creator/node_modules/src/utils.ts"],"sourcesContent":["import type { Hub } from '@sentry/core';\nimport { getCurrentHub, hasTracingEnabled as _hasTracingEnabled } from '@sentry/core';\nimport type { Options, Transaction } from '@sentry/types';\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * TODO(v7): Reorganize these exports\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n */\nexport { TRACEPARENT_REGEXP, extractTraceparentData } from '@sentry/utils';\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n * @deprecated This export has moved to `@sentry/core`. This export will be removed from `@sentry/tracing` in v8.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  return _hasTracingEnabled(maybeOptions);\n}\n\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction<T extends Transaction>(maybeHub?: Hub): T | undefined {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope && (scope.getTransaction() as T | undefined);\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time: number): number {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nexport function secToMs(time: number): number {\n  return time * 1000;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}