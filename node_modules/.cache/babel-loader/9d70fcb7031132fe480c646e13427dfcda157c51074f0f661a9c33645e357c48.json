{"ast":null,"code":"import _classCallCheck from \"/Users/rajeshbagul/code/ai-hackathon/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/rajeshbagul/code/ai-hackathon/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, loadModule, fill, isThenable } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for graphql package */\nvar GraphQL = /*#__PURE__*/function () {\n  function GraphQL() {\n    _classCallCheck(this, GraphQL);\n    GraphQL.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n  _createClass(GraphQL, [{\n    key: \"__init\",\n    value:\n    /**\n     * @inheritDoc\n     */\n    function __init() {\n      this.name = GraphQL.id;\n    }\n\n    /**\n     * @inheritDoc\n     */\n  }, {\n    key: \"setupOnce\",\n    value: function setupOnce(_, getCurrentHub) {\n      if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n        return;\n      }\n      var pkg = loadModule('graphql/execution/execute.js');\n      if (!pkg) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n        return;\n      }\n      fill(pkg, 'execute', function (orig) {\n        return function () {\n          var scope = getCurrentHub().getScope();\n          var parentSpan = _optionalChain([scope, 'optionalAccess', function (_2) {\n            return _2.getSpan;\n          }, 'call', function (_3) {\n            return _3();\n          }]);\n          var span = _optionalChain([parentSpan, 'optionalAccess', function (_4) {\n            return _4.startChild;\n          }, 'call', function (_5) {\n            return _5({\n              description: 'execute',\n              op: 'graphql.execute'\n            });\n          }]);\n          _optionalChain([scope, 'optionalAccess', function (_6) {\n            return _6.setSpan;\n          }, 'call', function (_7) {\n            return _7(span);\n          }]);\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          var rv = orig.call.apply(orig, [this].concat(args));\n          if (isThenable(rv)) {\n            return rv.then(function (res) {\n              _optionalChain([span, 'optionalAccess', function (_8) {\n                return _8.finish;\n              }, 'call', function (_9) {\n                return _9();\n              }]);\n              _optionalChain([scope, 'optionalAccess', function (_10) {\n                return _10.setSpan;\n              }, 'call', function (_11) {\n                return _11(parentSpan);\n              }]);\n              return res;\n            });\n          }\n          _optionalChain([span, 'optionalAccess', function (_12) {\n            return _12.finish;\n          }, 'call', function (_13) {\n            return _13();\n          }]);\n          _optionalChain([scope, 'optionalAccess', function (_14) {\n            return _14.setSpan;\n          }, 'call', function (_15) {\n            return _15(parentSpan);\n          }]);\n          return rv;\n        };\n      });\n    }\n  }], [{\n    key: \"__initStatic\",\n    value: function __initStatic() {\n      this.id = 'GraphQL';\n    }\n  }]);\n  return GraphQL;\n}();\nGraphQL.__initStatic();\nexport { GraphQL };","map":{"version":3,"mappings":";;;;;;AAMA;AAAA,IACAA;EAAA;IAAA;IAAAA;EAAA;EACA;;;EAAA;IAAA;IAAA;IAKA;;;IAGA;MAAA;IAAA;;IAEA;;;EAAA;IAAA;IAAA,OAGA;MACA;QACA;QACA;MACA;MAEA,qBAEA;MAEA;QACA;QACA;MACA;MAEAC;QACA;UACA;UACA;YAAA;UAAA;YAAA;UAAA;UAEA;YAAA;UAAA;YAAA;cACAC;cACAC;YACA;UAAA;UAEAC;YAAA;UAAA;YAAA;UAAA;UAAA,kCATAC;YAAAA;UAAA;UAWA;UAEA;YACA;cACAD;gBAAA;cAAA;gBAAA;cAAA;cACAA;gBAAA;cAAA;gBAAA;cAAA;cAEA;YACA;UACA;UAEAA;YAAA;UAAA;YAAA;UAAA;UACAA;YAAA;UAAA;YAAA;UAAA;UACA;QACA;MACA;IACA;EAAA;IAAA;IAAA,OArDA;MAAA;IAAA;EAAA;EAAA;AAAA;AAsDAJ","names":["GraphQL","fill","description","op","_optionalChain","args"],"sources":["/Users/rajeshbagul/code/ai-hackathon/node_modules/src/integrations/node/graphql.ts"],"sourcesContent":["import type { Hub } from '@sentry/core';\nimport type { EventProcessor, Integration } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\n/** Tracing integration for graphql package */\nexport class GraphQL implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GraphQL';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GraphQL.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      __DEBUG_BUILD__ && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = loadModule<{\n      [method: string]: (...args: unknown[]) => unknown;\n    }>('graphql/execution/execute.js');\n\n    if (!pkg) {\n      __DEBUG_BUILD__ && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig: () => void | Promise<unknown>) {\n      return function (this: unknown, ...args: unknown[]) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n\n        const span = parentSpan?.startChild({\n          description: 'execute',\n          op: 'graphql.execute',\n        });\n\n        scope?.setSpan(span);\n\n        const rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then((res: unknown) => {\n            span?.finish();\n            scope?.setSpan(parentSpan);\n\n            return res;\n          });\n        }\n\n        span?.finish();\n        scope?.setSpan(parentSpan);\n        return rv;\n      };\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}