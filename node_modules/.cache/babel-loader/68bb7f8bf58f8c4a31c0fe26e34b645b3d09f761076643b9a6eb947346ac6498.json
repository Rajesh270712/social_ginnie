{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshbagul/code/ai-hackathon/src/Pages/SuccessPage/SuccessPage.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MICROSITE_CONNECT_ACCOUNT_SUCCESS, MICROSITE_CONNECT_MORE_ACCOUNTS, trackEvent } from \"../../analytics\";\nimport { Background, FullScreenLoader, NavBar } from \"../../Components\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { getWorkplatformDetails } from \"../../utils/api\";\nimport { CONNECTED_STORAGE_WORK_PLATFORM_ID, STORAGE_AUTH_DATA, STORAGE_AUTH_TENANT_APP_NAME } from \"../../utils/constants\";\nimport \"./SuccessPage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SuccessPage() {\n  _s();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(FullScreenLoader, {\n    showLoader: isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Background, {\n      rightLeaves: true,\n      leftLeaves: true,\n      rightScratched: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"success-page-body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SuccessPage, \"Yzbe/tFLAE2qr3U9oNoKMLH/AuQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["Box","React","useEffect","useState","useRef","useNavigate","MICROSITE_CONNECT_ACCOUNT_SUCCESS","MICROSITE_CONNECT_MORE_ACCOUNTS","trackEvent","Background","FullScreenLoader","NavBar","ROUTE_LANDING_PAGE","getWorkplatformDetails","CONNECTED_STORAGE_WORK_PLATFORM_ID","STORAGE_AUTH_DATA","STORAGE_AUTH_TENANT_APP_NAME","SuccessPage","navigate","isLoading","setIsLoading"],"sources":["/Users/rajeshbagul/code/ai-hackathon/src/Pages/SuccessPage/SuccessPage.jsx"],"sourcesContent":["import { Box } from \"@mui/system\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MICROSITE_CONNECT_ACCOUNT_SUCCESS, MICROSITE_CONNECT_MORE_ACCOUNTS, trackEvent } from \"../../analytics\";\nimport { Background, FullScreenLoader, NavBar } from \"../../Components\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { getWorkplatformDetails } from \"../../utils/api\";\nimport { CONNECTED_STORAGE_WORK_PLATFORM_ID, STORAGE_AUTH_DATA, STORAGE_AUTH_TENANT_APP_NAME } from \"../../utils/constants\";\nimport \"./SuccessPage.scss\";\n\nfunction SuccessPage() {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n\n  if (isLoading) return <FullScreenLoader showLoader={isLoading} />;\n\n  return (\n    <>\n      <Background rightLeaves leftLeaves rightScratched>\n        <Box className=\"success-page-body\">\n        \n        </Box>\n      </Background>\n    </>\n  );\n}\n\nexport default SuccessPage;\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,aAAa;AACjC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iCAAiC,EAAEC,+BAA+B,EAAEC,UAAU,QAAQ,iBAAiB;AAChH,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,kBAAkB;AACvE,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,sBAAsB,QAAQ,iBAAiB;AACxD,SAASC,kCAAkC,EAAEC,iBAAiB,EAAEC,4BAA4B,QAAQ,uBAAuB;AAC3H,OAAO,oBAAoB;AAAC;AAAA;AAE5B,SAASC,WAAW,GAAG;EAAA;EACrB,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhD,IAAIgB,SAAS,EAAE,oBAAO,QAAC,gBAAgB;IAAC,UAAU,EAAEA;EAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EAEjE,oBACE;IAAA,uBACE,QAAC,UAAU;MAAC,WAAW;MAAC,UAAU;MAAC,cAAc;MAAA,uBAC/C,QAAC,GAAG;QAAC,SAAS,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA;IAE5B;MAAA;MAAA;MAAA;IAAA;EACK,iBACZ;AAEP;AAAC,GAfQF,WAAW;EAAA,QACDZ,WAAW;AAAA;AAAA,KADrBY,WAAW;AAiBpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}