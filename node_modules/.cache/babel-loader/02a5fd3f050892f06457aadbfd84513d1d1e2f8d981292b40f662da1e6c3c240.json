{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshbagul/code/ai-hackathon/src/Pages/SuccessPage/SuccessPage.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MICROSITE_CONNECT_ACCOUNT_SUCCESS, MICROSITE_CONNECT_MORE_ACCOUNTS, trackEvent } from \"../../analytics\";\nimport { Background, FullScreenLoader, NavBar } from \"../../Components\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { getWorkplatformDetails } from \"../../utils/api\";\nimport { CONNECTED_STORAGE_WORK_PLATFORM_ID, STORAGE_AUTH_DATA, STORAGE_AUTH_TENANT_APP_NAME } from \"../../utils/constants\";\nimport \"./SuccessPage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SuccessPage() {\n  _s();\n  const navigate = useNavigate();\n  if (!appName) return /*#__PURE__*/_jsxDEV(FullScreenLoader, {\n    showLoader: isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Background, {\n      rightLeaves: true,\n      leftLeaves: true,\n      rightScratched: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"success-page-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"success-title-msg\",\n          children: \"Thank you for connecting your accounts!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"success-description-msg\",\n          children: [\"That was easy! You can now choose to\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => {\n              trackEvent(MICROSITE_CONNECT_MORE_ACCOUNTS);\n              navigate(ROUTE_LANDING_PAGE);\n            },\n            children: \"connect more accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), \" \", \"if you'd like. If you have questions or concerns, please contact \", appName, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SuccessPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["Box","React","useEffect","useState","useRef","useNavigate","MICROSITE_CONNECT_ACCOUNT_SUCCESS","MICROSITE_CONNECT_MORE_ACCOUNTS","trackEvent","Background","FullScreenLoader","NavBar","ROUTE_LANDING_PAGE","getWorkplatformDetails","CONNECTED_STORAGE_WORK_PLATFORM_ID","STORAGE_AUTH_DATA","STORAGE_AUTH_TENANT_APP_NAME","SuccessPage","navigate","appName","isLoading"],"sources":["/Users/rajeshbagul/code/ai-hackathon/src/Pages/SuccessPage/SuccessPage.jsx"],"sourcesContent":["import { Box } from \"@mui/system\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MICROSITE_CONNECT_ACCOUNT_SUCCESS, MICROSITE_CONNECT_MORE_ACCOUNTS, trackEvent } from \"../../analytics\";\nimport { Background, FullScreenLoader, NavBar } from \"../../Components\";\nimport { ROUTE_LANDING_PAGE } from \"../../Routes/RouteMapping\";\nimport { getWorkplatformDetails } from \"../../utils/api\";\nimport { CONNECTED_STORAGE_WORK_PLATFORM_ID, STORAGE_AUTH_DATA, STORAGE_AUTH_TENANT_APP_NAME } from \"../../utils/constants\";\nimport \"./SuccessPage.scss\";\n\nfunction SuccessPage() {\n  const navigate = useNavigate();\n  \n\n  if (!appName) return <FullScreenLoader showLoader={isLoading} />;\n\n  return (\n    <>\n      <Background rightLeaves leftLeaves rightScratched>\n        <Box className=\"success-page-body\">\n          <label className=\"success-title-msg\">Thank you for connecting your accounts!</label>\n          <label className=\"success-description-msg\">\n            That was easy! You can now choose to{\" \"}\n            <a\n              href=\"#\"\n              onClick={() => {\n                trackEvent(MICROSITE_CONNECT_MORE_ACCOUNTS);\n                navigate(ROUTE_LANDING_PAGE);\n              }}\n            >\n              connect more accounts\n            </a>{\" \"}\n            if you'd like. If you have questions or concerns, please contact {appName}.\n          </label>\n        </Box>\n      </Background>\n    </>\n  );\n}\n\nexport default SuccessPage;\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,aAAa;AACjC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iCAAiC,EAAEC,+BAA+B,EAAEC,UAAU,QAAQ,iBAAiB;AAChH,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,kBAAkB;AACvE,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,sBAAsB,QAAQ,iBAAiB;AACxD,SAASC,kCAAkC,EAAEC,iBAAiB,EAAEC,4BAA4B,QAAQ,uBAAuB;AAC3H,OAAO,oBAAoB;AAAC;AAAA;AAE5B,SAASC,WAAW,GAAG;EAAA;EACrB,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAG9B,IAAI,CAACc,OAAO,EAAE,oBAAO,QAAC,gBAAgB;IAAC,UAAU,EAAEC;EAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EAEhE,oBACE;IAAA,uBACE,QAAC,UAAU;MAAC,WAAW;MAAC,UAAU;MAAC,cAAc;MAAA,uBAC/C,QAAC,GAAG;QAAC,SAAS,EAAC,mBAAmB;QAAA,wBAChC;UAAO,SAAS,EAAC,mBAAmB;UAAA,UAAC;QAAuC;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpF;UAAO,SAAS,EAAC,yBAAyB;UAAA,WAAC,sCACL,EAAC,GAAG,eACxC;YACE,IAAI,EAAC,GAAG;YACR,OAAO,EAAE,MAAM;cACbZ,UAAU,CAACD,+BAA+B,CAAC;cAC3CW,QAAQ,CAACN,kBAAkB,CAAC;YAC9B,CAAE;YAAA,UACH;UAED;YAAA;YAAA;YAAA;UAAA,QAAI,EAAC,GAAG,EAAC,mEACwD,EAACO,OAAO,EAAC,GAC5E;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACK,iBACZ;AAEP;AAAC,GA5BQF,WAAW;EAAA,QACDZ,WAAW;AAAA;AAAA,KADrBY,WAAW;AA8BpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}